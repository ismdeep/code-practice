/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author ismdeep
 */

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <stack>
#include <vector>
#include <algorithm>
#include <list>
#include <map>
#include <queue>
#include <bitset>
#include <numeric>
#include <sstream>
#include <limits>

using namespace std;


#define TIMES(id, size) for(int id = 0; id < (size); ++id)
#define FOR(type_id, id, from, to, step) for(type_id id = (from); id < (to); id += step)

typedef unsigned long long uint64_t;
typedef unsigned char uint8_t;


class HDU1720 {
public:
	void solve(std::istream& in, std::ostream& out) {
	    string stra, strb;
	    int a, b;
	    while (in >> stra >> strb) {
	        sscanf(stra.data(), "%x", &a);
	        sscanf(strb.data(), "%x", &b);
	        out << a + b << endl;
	    }
	}
};


int main() {
	HDU1720 solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
