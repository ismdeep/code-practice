/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author ismdeep
 */

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <stack>
#include <vector>
#include <algorithm>
#include <list>
#include <map>
#include <queue>
#include <bitset>
#include <numeric>
#include <sstream>
#include <limits>
#include <string.h>
#include <string>
using namespace std;


#define TIMES(id, size) for(int id = 0; id < (size); ++id)
#define FOR(type_id, id, from, to, step) for(type_id id = (from); id <= (to); id += step)
#define DBG(x) (void)(cout << "L" << __LINE__ << ": " << #x << " = " << (x) << '\n')


class DOTCPP1030 {
public:
    void solve(std::istream &in, std::ostream &out) {
        int a[3][3];
        TIMES(i, 3) {
	        TIMES(j, 3) {
	            in >> a[i][j];
	        }
        }
        TIMES(i, 3) {
            TIMES(j, 3) {
                out << a[j][i] << " ";
            }
            out << endl;
        }
    }
};


int main() {
	DOTCPP1030 solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
